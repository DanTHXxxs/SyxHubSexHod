
if game:GetService("CoreGui"):FindFirstChild("ScreenGui") then
	game:GetService("CoreGui"):FindFirstChild("ScreenGui"):Destroy()
end


_G.Respawnsss = false
_G.Respawns = false
_G.AutoFarms = false
_G.AutoFarm = false

getgenv().ScriptPaused = false;


local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")


local Player = Players.LocalPlayer
local Hunger = Player:WaitForChild("stats"):WaitForChild("Hunger")
local BuyKart = Workspace:WaitForChild("BarbStores"):WaitForChild("FarmKart"):WaitForChild("CustomerSeat")
local BuyFood = Workspace:WaitForChild("Stores"):WaitForChild("Food"):WaitForChild("CustomerSeats")
local Karts = Workspace:WaitForChild("Karts")
local RiceFolder = Workspace:WaitForChild("Rice")
local RemoteEvent = ReplicatedStorage:WaitForChild("RemoteEvent")


local UserInputService = game:GetService('UserInputService')
local VirtualInputManager = game:GetService("VirtualInputManager")

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/DanTHXxxs/SyxHubSexHod/main/main/Library.lua"))()
local ThemeManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/DanTHXxxs/SyxHubSexHod/main/main/ThemeManager.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/DanTHXxxs/SyxHubSexHod/main/main/SaveManager.lua"))()

local Window = Library:CreateWindow({

    Title = 'Sy x Hub | Generic Roleplay Gaem | '   ..os.date("%d ")..os.date("%A ")..os.date("%B ")..os.date("%Y"),0,9356831478,
    Center = true, 
    AutoShow = true,
})


local Tabs = {
    
    Main = Window:AddTab('General'), 
    ['UI Settings'] = Window:AddTab('Settings'),
}


local Mainz = Tabs.Main:AddLeftGroupbox('Main')


Mainz:AddToggle('AutoFarm', {
    Text = 'Auto Farm [FarmKart]',
    Default = _G.AutoFarms, 

})


Toggles.AutoFarm:OnChanged(function(Fs)
_G.AutoFarm = Fs
spawn(function()
while _G.AutoFarm do
    wait()
    
    --// Get Tool \\--
function GetTool(Name)
    local Tool = Player.Character and Player.Character:FindFirstChild(Name) or Player.Backpack:FindFirstChild(Name)
    if Tool and Player.Character and Player.Character.Humanoid then
        Player.Character.Humanoid:UnequipTools()
        Player.Character.Humanoid:EquipTool(Tool)
        task.wait()
        return Tool
    end
end

--// Get Rice \\--
function GetRice()
    for _, Rice in next, RiceFolder:GetChildren() do
        local Model = Rice:FindFirstChildOfClass("Model")
        if Model and Model.PrimaryPart and Rice:FindFirstChild("Health") and Rice.Health.Value > 0 and Rice:FindFirstChild("Reward") and Rice.Reward.Value > 0 then
            return Rice, Model.PrimaryPart
        end
    end
end

--// Use Kart \\--
function UseKart(Kart)
    if Kart.Name == Player.Name then
        -- Sickles
        local Sickles = {Kart:WaitForChild("LeftSickle"), Kart:WaitForChild("RightSickle")}
        -- Farm Rice
        while _G.AutoFarm do
            -- Sit
            if Kart:FindFirstChild("VehicleSeat") and Kart.VehicleSeat.Occupant ~= Player.Character.Humanoid then
                Kart.VehicleSeat:Sit(Player.Character.Humanoid)
            end
            -- Rice
            local Rice, Part = GetRice()
            if Rice and Kart.PrimaryPart then
                Kart:SetPrimaryPartCFrame(Part.CFrame * CFrame.new(3,3,3))
                task.wait(0.1);
                for _, Sickle in next, Sickles do
                    firetouchinterest(Sickle, Part, 0)
                    firetouchinterest(Sickle, Part, 1)
                end
            end
        end
    end
end

--// Get Kart \\--
while _G.AutoFarm do
    if not Karts:FindFirstChild(Player.Name) and not ScriptPaused then
        local Tool = GetTool("FarmKart")
        local Humanoid = Player.Character and Player.Character:FindFirstChild("Humanoid")
        if Humanoid and Humanoid.Health <= 0 then
            RemoteEvent:FireServer("Respawn")
        elseif Tool then
            Tool:Activate()
        else
            BuyKart:Sit(Player.Character.Humanoid)
        end
    else
        if Karts:FindFirstChild(Player.Name) then
            for i,v in pairs(Karts[Player.Name]:GetDescendants()) do
                if v:IsA("Part") then
                    v.CanCollide = false;
                end
            end
            UseKart(Karts[Player.Name])
        end
    end
    task.wait(2.3)
end

end
end)

end)

Mainz:AddToggle('Auto', {
    Text = 'Auto Respawn',
    Default = _G.Respawnsss, 

})


Toggles.Auto:OnChanged(function(Fs)
    
_G.Respawns = Fs
while _G.Respawns do
    wait(1.5)
game:GetService("ReplicatedStorage").RemoteEvent:FireServer("Respawn")
   end
end)

Mainz:AddDivider()

local MyButton = Mainz:AddButton('Sprint (No Auto)', function()
VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Q, false, game)
end)

Mainz:AddSlider('Speed', {
    Text = 'Sprint Speed',


    Default = 24,
    Min = 24,
    Max = 35,
    Rounding = 1,

    Compact = false, 
})


Options.Speed:OnChanged(function(sliderSprint)
   sprintSpeed = sliderSprint
   
   UserInputService.InputBegan:Connect(function(inputObject, gameProcessedEvent)
				
    
	local isQHeld = UserInputService:IsKeyDown(Enum.KeyCode.Q)

	
	
	if gameProcessedEvent == true then
		
		if isQHeld == true then
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = sprintSpeed
		end
		
	
		
	end

end)
end)



local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')


MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'F4', NoUI = true, Text = 'Menu keybind' }) 

Library.ToggleKeybind = Options.MenuKeybind
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)

SaveManager:IgnoreThemeSettings() 


SaveManager:SetIgnoreIndexes({ 'MenuKeybind' }) 


ThemeManager:SetFolder('MyScriptHub')

SaveManager:BuildConfigSection(Tabs['UI Settings']) 

ThemeManager:ApplyToTab(Tabs['UI Settings'])




